# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os : [ubuntu-latest]
        python-version: ["3.6", "3.7"]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
        if [ -f tests/requirements.txt ]; then python -m pip install -r tests/requirements.txt; fi
        # pytest needs these too
        if [ -f optional-requirements.txt ]; then python -m pip install -r optional-requirements.txt; fi

    # Cache the pip requirmenets for other tests. If requirements cached use them to speed up the build.
    # Ref: https://github.com/actions/cache/blob/main/examples.md#python---pip 
    - name: Cache pip Linux
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Lint
      run: |
        if [[ "${{ matrix.python-version }}" == "3.6" ]]; then 
          black --version
          black kinematic_snake tests examples
          # stop the build if there are Python syntax errors or undefined names
          flake8 kinematic_snake tests examples --count --select=E9,F63,F7,F82 --show-source --statistics
        fi

    - name: Test with pytest
      run: |
        if [[ "${{ matrix.python-version }}" == "3.6" ]]; then 
          python -m pytest --cov=kinematic_snake --cov-report=xml
        else
          python -m pytest
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      if: ${{ matrix.python-version == '3.6' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        verbose: true # optional (default = false)
        files: ./coverage.xml

    - name: Package installation
      run : |
        python -m pip install --editable . --user
        cd docs
        python -c "import kinematic_snake"
